规则理解（主要是“直接自杀”情形）：
甲方下一手棋后，若能使乙方一块棋或多块棋没气，则提掉乙没气的棋，甲的这一手棋正常落下（它必然有气）。
甲方下一手棋后，若不能使乙方任一块棋没气，但造成甲的至少一块棋没气，则甲不能下这一手。


气的数据结构：
    棋串记录了：棋子id的数组，棋串的气
    另有棋串dict
    棋子记录所在棋串id

----

"气"的翻译：
英语 liberty https://senseis.xmp.net/?Liberty
    liberty "气"之外的含义是围死对手一块棋所需的步数
日语 dame
上面链接提到了 Qi = breath，下头有语源小讨论记录

术语索引 https://senseis.xmp.net/?ChineseGoTerms
    via https://www.zhihu.com/question/28801442

----

气数据的维护：**Deprecated, 代码已经不是这么写的了**
```
    on 甲方落子:
        先找出所有 distinct 邻居棋串（避免对同一棋串重复操作），按敌我分开；
        邻居敌方各棋串气-=1。若有气=0者，逐个提子()——提子不用怕回滚，因为有提子了，此次落子必然合法（不考虑全同再现时= =、）
        现在再检查落子的气m
        若无邻居我方棋串{
            若m=0则提示invalid、回滚,else{
                新建棋串，棋子stoneString指向棋串
            }
        }else 邻居有我方n（n>0）个distinct棋串，merge{
            新的数组吧（concat 支持*个参数……）
            新棋串气 = 原各棋串气之和s - n + 新落子的气m
                s和m都是敌方提子（if any）后的！
            若新棋串气=0，则落子不合法，回滚{
                提示invalid
                回滚：邻居敌方各棋串气+=1
                // 我方棋串还没实际改变，正好不用管
            }else{
                为新棋串里的各个棋子记录stoneString属性，指向新数组
                销毁被merge的棋串
            }

        }
    on 乙方提子:
        node 的 s归0，stone string 归 null
        相邻甲方distinct棋串的气分别+=1
            此时新落子还没有被记录！这个气+1顾不着它。
        （不管乙方邻居，因为按计划肯定要提掉）
        销毁棋串
```

